{"version":3,"sources":["CircleButton/CircleButton.js","Context.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","ErrorBoundary/ErrorBoundary.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","Context","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","TOKEN_KEY","process","REACT_APP_TOKEN_KEY","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","Note_Note_Note","NotePageMain","push","content","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","NotefulForm","src_ErrorBoundary_ErrorBoundary","assign","action","AddFolder","handleAddFolder","target","value","log","Content-Type","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","htmlFor","required","AddNote","newNote","folder_id","Date","updateFolder","App","updateFolders","result","setState","handleAddedFolder","item","handleNewNote","setNotes","newNotes","n","_this2","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f6e6657.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n    notes: [],\n    folders: [],\n    addFolder: () => {},\n    addNote: () => {},\n    deleteNote: () => {}\n})","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport Context from '../Context'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  \n  static contextType = Context;\n  \n  render() {\n    const { folders = [], notes = [] } = this.context\n  \n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {folders.map(folder =>\n          <li key={folder.id}>\n            <NavLink\n              className='NoteListNav__folder-link'\n              to={`/folder/${folder.id}`}\n            >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(notes, folder.id)}\n              </span>\n              {folder.name}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to='/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n}\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport Context from '../Context'\nimport { findNote, findFolder } from '../notes-helpers'\nimport PropTypes from 'prop-types'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = Context;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  })\n}","export default {\n    API_ENDPOINT: 'https://radiant-beach-41928.herokuapp.com',\n    // API_ENDPOINT: 'http://localhost:8000',\n    TOKEN_KEY: process.env.REACT_APP_TOKEN_KEY,\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = Context;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'DD MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired, \n  onDeleteNote: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\n// import Context from '../Context'\n// import { getNotesForFolder } from '../notes-helpers'\n// import PropTypes from 'prop-types'\nimport './NoteListMain.css'\n\nexport default function NoteListMain(props) {\n  return (\n    <section className='NoteListMain'>\n      <ul>\n        {props.notes.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n            />\n          </li>\n        )}\n      </ul>\n      <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to='/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n      </div>\n    </section>\n  )\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport Context from '../Context'\nimport { findNote } from '../notes-helpers'\nimport PropTypes from 'prop-types'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  \n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = Context\n\n  deleteNote = id => {\n    this.props.history.push(`/`)\n  }\n  \n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n  \n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          content={note.content}\n          modified={note.modified}\n          onDeleteNote={this.deleteNote}\n        />\n        <div className='NotePageMain__content'>\n        </div>\n      </section>\n    )\n  }\n}\n\nNotePageMain.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  })\n}","import React from 'react'\nimport Proptypes from 'prop-types'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return(\n                <h2>Error!</h2>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: Proptypes.any.isRequired\n}\n\nexport default ErrorBoundary","import React from 'react'\nimport './NotefulForm.css'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <ErrorBoundary>\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\nimport config from '../config'\n\nclass AddFolder extends React.Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n    \n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n    static contextType = Context;\n\n    handleAddFolder = e => {\n        e.preventDefault()\n        let folder = {\n            name: e.target['new-folder'].value\n        }\n        console.log(folder)\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(folder)\n        })\n        .then(res => {\n            if(!res.ok)\n                return res.json().then(e => Promise.reject(e))\n            return res.json()\n        })\n        .then(folder => {\n            this.context.addFolder(folder);\n            this.props.history.push(`/folders/${folder.id}`)\n\n        })\n    }\n\n    render() {\n        return (\n                <NotefulForm onSubmit={this.handleAddFolder}>\n                <ErrorBoundary>\n                    <label htmlFor=\"new-folder\">New Folder</label>\n                    <input type=\"text\" id=\"new-folder\" name=\"new-folder\" required/>\n                    <button type='submit'>Add New Folder</button>\n                </ErrorBoundary>    \n                </NotefulForm>\n        )\n    }\n}\n\nexport default AddFolder","import React from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\nimport config from '../config'\n\nclass AddNote extends React.Component {\n\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n\n    static contextType = Context\n\n    addNote = e => {\n        e.preventDefault();\n        const newNote = {\n            name: e.target['note-name'].value,\n            content: e.target['content-name'].value,\n            folder_id: e.target.folderId.value,\n            modified: new Date()\n        }\n        console.log(newNote)\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(newNote),\n        })\n        .then(res => {\n            if(!res.ok)\n                return res.json().then(e => Promise.reject(e))\n            return res.json()\n        })\n        .then(note => {\n            this.context.addNote(note);\n            this.context.updateFolder();\n            this.props.history.push(`/notes/${note.id}`)\n        })\n    }\n\n    render() {\n        \n        return(\n           \n            <NotefulForm onSubmit={this.addNote}>\n            <ErrorBoundary>\n                <label htmlFor=\"name\">Name</label>\n                <input id=\"name\" type=\"text\" name=\"note-name\" required></input>\n                <label htmlFor=\"content\">Content</label>\n                <textarea id=\"content\" type=\"text\" name=\"content-name\" required/>\n                <label htmlFor=\"folder\">Folder</label>\n                <select name=\"folderId\">\n                    {this.context.folders.map(folder => (\n                        <option key={folder.id} value={folder.id}>{folder.name}</option>\n                    ))}\n                </select>\n                <button type=\"submit\">Add Note</button>\n            </ErrorBoundary>                \n            </NotefulForm>\n           \n        )\n    }\n}\n\nexport default AddNote","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport Context from '../Context';\nimport config from '../config'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        \n        this.updateFolders();\n\n        fetch(`${config.API_ENDPOINT}/notes`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'notes': result\n                })\n            })\n}\n\n    updateFolders = () => {\n        fetch(`${config.API_ENDPOINT}/folders`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'folders': result\n                })\n            })\n            \n    }\n\n    handleAddedFolder = (item) => {\n        let folder = this.state.folders;\n        folder.push(item)\n        this.setState({\n            folders: folder\n        })\n    }\n\n    handleNewNote = (note) => {\n        let newNote = this.state.notes;\n        newNote.push(note)\n        this.setState({\n            notes: newNote\n        })\n    }\n\n    setNotes = notes => {\n        this.setState({ notes: notes });\n    };\n\n    deleteNote = (id) => {\n        const newNotes = this.state.notes.filter(n => n.id !== id);\n        this.setNotes(newNotes)\n    }\n\n    \n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folders/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/notes/:note_id\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folders/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/notes/:note_id\" component={NotePageMain} />\n                <Route path=\"/add-folder\" component={AddFolder}/>\n                <Route path=\"/add-note\" component={AddNote}/>\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            addFolder: this.handleAddedFolder,\n            addNote: this.handleNewNote,\n            updateFolder: this.updateFolders,\n            deleteNote: this.deleteNote\n        };\n        return (\n            <Context.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </Context.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}