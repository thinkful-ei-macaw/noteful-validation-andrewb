{"version":3,"sources":["CircleButton/CircleButton.js","Context.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","ErrorBoundary/ErrorBoundary.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","folderId","folder_id","console","log","react_default","a","map","folder","key","NavLink","to","concat","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","Context","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","TOKEN_KEY","process","REACT_APP_TOKEN_KEY","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","_this$props","modified","format","NoteListMain","parseInt","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","n","note_id","content","split","para","i","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","NotefulForm","src_ErrorBoundary_ErrorBoundary","assign","action","AddFolder","handleAddFolder","target","value","Content-Type","body","JSON","stringify","push","NotefulForm_NotefulForm","onSubmit","htmlFor","required","AddNote","newNote","Date","updateFolder","App","updateFolders","result","setState","handleAddedFolder","item","handleNewNote","_this2","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9892e30a.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n    notes: [],\n    folders: [],\n    addFolder: () => {},\n    addNote: () => {},\n    deleteNote: () => {}\n})","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folder_id === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport Context from '../Context'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  \n  static contextType = Context;\n  \n  render() {\n    const { folders = [], notes = [] } = this.context\n    const folderId = this.props.folder_id\n    console.log(folderId)\n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {folders.map(folder =>\n        \n          <li key={folder.id}>\n            \n            <NavLink\n              className='NoteListNav__folder-link'\n              to={`/folder/${folder.id}`}\n            >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(notes, folder.id)}\n              </span>\n              {folder.name}\n            </NavLink>\n          </li>\n          \n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to='/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport Context from '../Context'\nimport { findNote, findFolder } from '../notes-helpers'\nimport PropTypes from 'prop-types'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = Context;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }),\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  })\n}","export default {\n    API_ENDPOINT: 'https://radiant-beach-41928.herokuapp.com',\n    // API_ENDPOINT: 'http://localhost:8000',\n    TOKEN_KEY: process.env.REACT_APP_TOKEN_KEY,\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static propTypes ={\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.string.isRequired,\n    onDeleteNote: PropTypes.func.isRequired\n  }\n  static contextType = Context;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n    console.log(noteId)\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(e => Promise.reject(e))\n        }\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport Context from '../Context'\nimport { getNotesForFolder } from '../notes-helpers'\nimport PropTypes from 'prop-types'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = Context\n\n  render() {\n    const folderId = parseInt(this.props.match.params.folder_id)\n    const { notes=[] } = this.context\n    console.log(notes)\n    console.log(folderId)\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    \n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to='/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  })\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport Context from '../Context'\nimport { findNote } from '../notes-helpers'\nimport PropTypes from 'prop-types'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  \n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = Context\n\n  deleteNote = id => {\n    this.props.notes.filter(n => n.id === id)\n  }\n  \n  render() {\n    const { notes=[] } = this.context\n    const noteId = parseInt(this.props.match.params.note_id)\n    const note = findNote(notes, noteId) || { content: '' }\n    console.log(noteId)\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.deleteNote}\n        />\n        <div className='NotePageMain__content'>\n        {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n      </section>\n    )\n  }\n}\n\nNotePageMain.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  })\n}","import React from 'react'\nimport Proptypes from 'prop-types'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return(\n                <h2>Error!</h2>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: Proptypes.any.isRequired\n}\n\nexport default ErrorBoundary","import React from 'react'\nimport './NotefulForm.css'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <ErrorBoundary>\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\nimport config from '../config'\n\nclass AddFolder extends React.Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n    \n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n    static contextType = Context;\n\n    handleAddFolder = e => {\n        e.preventDefault()\n        let folder = {\n            name: e.target['new-folder'].value\n        }\n        console.log(folder)\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(folder)\n        })\n        .then(res => {\n            if(!res.ok)\n                return res.json().then(e => Promise.reject(e))\n            return res.json()\n        })\n        .then(folder => {\n            this.context.addFolder(folder);\n            this.props.history.push(`/folders/${folder.id}`)\n\n        })\n    }\n\n    render() {\n        return (\n                <NotefulForm onSubmit={this.handleAddFolder}>\n                <ErrorBoundary>\n                    <label htmlFor=\"new-folder\">New Folder</label>\n                    <input type=\"text\" id=\"new-folder\" name=\"new-folder\" required/>\n                    <button type='submit'>Add New Folder</button>\n                </ErrorBoundary>    \n                </NotefulForm>\n        )\n    }\n}\n\nexport default AddFolder","import React from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\nimport config from '../config'\n\nclass AddNote extends React.Component {\n\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n\n    static contextType = Context\n\n    addNote = e => {\n        e.preventDefault();\n        const newNote = {\n            name: e.target['note-name'].value,\n            content: e.target['content-name'].value,\n            folder_id: e.target.folderId.value,\n            modified: new Date()\n        }\n        console.log(newNote)\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(newNote),\n        })\n        .then(res => {\n            if(!res.ok)\n                return res.json().then(e => Promise.reject(e))\n            return res.json()\n        })\n        .then(note => {\n            this.context.addNote(note);\n            this.context.updateFolder(note);\n            this.props.history.push(`/note/${note.id}`)\n        })\n    }\n\n    render() {\n        \n        return(\n           \n            <NotefulForm onSubmit={this.addNote}>\n            <ErrorBoundary>\n                <label htmlFor=\"name\">Name</label>\n                <input id=\"name\" type=\"text\" name=\"note-name\" required></input>\n                <label htmlFor=\"content\">Content</label>\n                <textarea id=\"content\" type=\"text\" name=\"content-name\" required/>\n                <label htmlFor=\"folder\">Folder</label>\n                <select name=\"folderId\">\n                    {this.context.folders.map(folder => (\n                        <option key={folder.id} value={folder.id}>{folder.name}</option>\n                    ))}\n                </select>\n                <button type=\"submit\">Add Note</button>\n            </ErrorBoundary>                \n            </NotefulForm>\n           \n        )\n    }\n}\n\nexport default AddNote","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport Context from '../Context';\nimport config from '../config'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        \n        this.updateFolders();\n\n        fetch(`${config.API_ENDPOINT}/notes`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'notes': result\n                })\n            })\n}\n\n    updateFolders = () => {\n        fetch(`${config.API_ENDPOINT}/folders`)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'folders': result\n                })\n            })\n            \n    }\n\n    handleAddedFolder = (item) => {\n        let folder = this.state.folders;\n        folder.push(item)\n        this.setState({\n            folders: folder\n        })\n    }\n\n    handleNewNote = (note) => {\n        let newNote = this.state.notes;\n        newNote.push(note)\n        this.setState({\n            notes: newNote\n        })\n    }\n\n    // setNotes = notes => {\n    //     this.setState({ notes: notes });\n    // };\n\n    deleteNote = (id) => {\n        this.setState({\n            notes: this.state.notes.filter(n => n.id !== id)\n        })\n    }\n\n    \n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:note_id\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n                \n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                \n                <Route path=\"/note/:note_id\" component={NotePageMain} />\n                <Route path=\"/add-folder\" component={AddFolder}/>\n                <Route path=\"/add-note\" component={AddNote}/>\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            addFolder: this.handleAddedFolder,\n            addNote: this.handleNewNote,\n            updateFolder: this.updateFolders,\n            deleteNote: this.deleteNote\n        };\n        return (\n            <Context.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </Context.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}