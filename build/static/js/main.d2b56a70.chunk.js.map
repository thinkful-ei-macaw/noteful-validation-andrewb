{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","findNote","notes","arguments","length","undefined","noteId","find","note","id","countNotesForFolder","folderId","filter","NoteListNav","react_default","a","folders","map","folder","key","NavLink","to","concat","name","Link","type","react_fontawesome_index_es","icon","NotePageNav","role","onClick","history","goBack","Note","format","modified","NoteListMain","Note_Note","NotePageMain","content","split","para","i","AddFolder","state","value","folderName","_this","setState","handleAddFolder","e","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","_this2","this","onSubmit","htmlFor","onChange","target","Component","App","handleAddedFolder","then","res","json","result","_this$state","Fragment","path","Route","exact","render","routeProps","NoteListNav_NoteListNav","assign","match","params","findFolder","NotePageNav_NotePageNav","component","_this$state2","notesForFolder","getNotesForFolder","NoteListMain_NoteListMain","NotePageMain_NotePageMain","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2b56a70.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default function NoteListNav(props) {\n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {props.folders.map(folder =>\n          <li key={folder.id}>\n            <NavLink\n              className='NoteListNav__folder-link'\n              to={`/folder/${folder.id}`}\n            >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(props.notes, folder.id)}\n              </span>\n              {folder.name}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to='/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Note.css'\n\nexport default function Note(props) {\n  return (\n    <div className='Note'>\n      <h2 className='Note__title'>\n        <Link to={`/note/${props.id}`}>\n          {props.name}\n        </Link>\n      </h2>\n      <button className='Note__delete' type='button'>\n        <FontAwesomeIcon icon='trash-alt' />\n        {' '}\n        remove\n      </button>\n      <div className='Note__dates'>\n        <div className='Note__dates-modified'>\n          Modified\n          {' '}\n          <span className='Date'>\n            {format(props.modified, 'Do MMM YYYY')}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\n\nexport default function NoteListMain(props) {\n  return (\n    <section className='NoteListMain'>\n      <ul>\n        {props.notes.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n            />\n          </li>\n        )}\n      </ul>\n      <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to='/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n      </div>\n    </section>\n  )\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\nexport default function NotePageMain(props) {\n  return (\n    <section className='NotePageMain'>\n      <Note\n        id={props.note.id}\n        name={props.note.name}\n        modified={props.note.modified}\n      />\n      <div className='NotePageMain__content'>\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}\n","import React from 'react'\n\nclass AddFolder extends React.Component {\n\n    state = {\n        value: ''\n    }\n\n    folderName = folder => {\n        this.setState({\n            value: folder\n        })\n    }\n\n    handleAddFolder = e => {\n        e.preventDefault()\n        fetch('http://localhost:3000/folders', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name: this.state.value })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => {this.handleAddFolder(e)}}>\n                    <label htmlFor=\"new-folder\">New Folder</label>\n                    <input type=\"text\"\n                            id=\"new-folder\"\n                            value={this.state.value}\n                            onChange={e => this.folderName(e.target.value)}\n                    />\n                    <button type='button'>Add New Folder</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddFolder","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder'\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    handleAddedFolder = (folder) => {\n        this.setState({\n            folders: folder\n        })\n    }\n\n    componentDidMount() {\n        // fake date loading from API call\n        fetch('http://localhost:9090/folders')\n            .then(res => res.json())\n            .then(result => this.setState({\n                folders: result\n            }))\n\n            fetch('http://localhost:9090/notes')\n            .then(res => res.json())\n            .then(result => this.setState({\n                notes: result\n            }))\n    }\n\n    renderNavRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => (\n                            <NoteListNav\n                                folders={folders}\n                                notes={notes}\n                                {...routeProps}\n                            />\n                        )}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId) || {};\n                        const folder = findFolder(folders, note.folderId);\n                        return <NotePageNav {...routeProps} folder={folder} />;\n                    }}\n                />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={AddFolder} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => {\n                            const {folderId} = routeProps.match.params;\n                            const notesForFolder = getNotesForFolder(\n                                notes,\n                                folderId\n                            );\n                            return (\n                                <NoteListMain\n                                    {...routeProps}\n                                    notes={notesForFolder}\n                                />\n                            );\n                        }}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId);\n                        return <NotePageMain {...routeProps} note={note} />;\n                    }}\n                />\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                <header className=\"App__header\">\n                    <h1>\n                        <Link to=\"/\">Noteful</Link>{' '}\n                        <FontAwesomeIcon icon=\"check-double\" />\n                    </h1>\n                </header>\n                <main className=\"App__main\">{this.renderMainRoutes()}</main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}