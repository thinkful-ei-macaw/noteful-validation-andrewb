{"ast":null,"code":"import _classCallCheck from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewburchett/thinkful/noteful-validation/src/AddNote/AddNote.js\";\nimport React from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport Context from '../Context';\nimport PropTypes from 'prop-types';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport config from '../config';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addNote = function (e) {\n      e.preventDefault();\n      var newNote = {\n        name: e.target['note-name'].value,\n        content: e.target['content-name'].value,\n        folder_id: e.target.folderId.value,\n        modified: new Date().toLocaleDateString()\n      };\n      console.log(newNote);\n      fetch(\"\".concat(config.API_ENDPOINT, \"/notes\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (note) {\n        _this.context.addNote(note);\n\n        _this.context.updateFolder();\n\n        _this.props.history.push(\"/notes/\".concat(note.id));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NotefulForm, {\n        onSubmit: this.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        name: \"note-name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"content\",\n        type: \"text\",\n        name: \"content-name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"folder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Folder\"), React.createElement(\"select\", {\n        name: \"folderId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, folder.name);\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add Note\")));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.defaultProps = {\n  history: {\n    push: function push() {}\n  }\n};\nAddNote.propTypes = {\n  history: PropTypes.object.isRequired\n};\nAddNote.contextType = Context;\nexport default AddNote;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/noteful-validation/src/AddNote/AddNote.js"],"names":["React","NotefulForm","Context","PropTypes","ErrorBoundary","config","AddNote","addNote","e","preventDefault","newNote","name","target","value","content","folder_id","folderId","modified","Date","toLocaleDateString","console","log","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","note","context","updateFolder","props","history","push","id","folders","map","folder","Component","defaultProps","propTypes","object","isRequired","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport Context from '../Context'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\nimport config from '../config'\n\nclass AddNote extends React.Component {\n\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n\n    static contextType = Context\n\n    addNote = e => {\n        e.preventDefault();\n        const newNote = {\n            name: e.target['note-name'].value,\n            content: e.target['content-name'].value,\n            folder_id: e.target.folderId.value,\n            modified: new Date().toLocaleDateString()\n        }\n        console.log(newNote)\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(newNote),\n        })\n        .then(res => {\n            if(!res.ok)\n                return res.json().then(e => Promise.reject(e))\n            return res.json()\n        })\n        .then(note => {\n            this.context.addNote(note);\n            this.context.updateFolder();\n            this.props.history.push(`/notes/${note.id}`)\n        })\n    }\n\n    render() {\n        \n        return(\n           \n            <NotefulForm onSubmit={this.addNote}>\n            <ErrorBoundary>\n                <label htmlFor=\"name\">Name</label>\n                <input id=\"name\" type=\"text\" name=\"note-name\" required></input>\n                <label htmlFor=\"content\">Content</label>\n                <textarea id=\"content\" type=\"text\" name=\"content-name\" required/>\n                <label htmlFor=\"folder\">Folder</label>\n                <select name=\"folderId\">\n                    {this.context.folders.map(folder => (\n                        <option key={folder.id} value={folder.id}>{folder.name}</option>\n                    ))}\n                </select>\n                <button type=\"submit\">Add Note</button>\n            </ErrorBoundary>                \n            </NotefulForm>\n           \n        )\n    }\n}\n\nexport default AddNote"]},"metadata":{},"sourceType":"module"}