{"ast":null,"code":"import _classCallCheck from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport Context from '../Context';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.handleAddedFolder = function (item) {\n      var folder = _this.state.folders;\n      folder.push(item);\n\n      _this.setState({\n        folders: folder\n      });\n    };\n\n    _this.handleNewNote = function (note) {\n      var newNote = _this.state.notes;\n      newNote.push(note);\n\n      _this.setState({\n        notes: newNote\n      });\n    };\n\n    _this.setNotes = function (notes) {\n      _this.setState({\n        notes: notes\n      });\n    };\n\n    _this.deleteNote = function (id) {\n      var newNotes = _this.state.notes.filter(function (n) {\n        return n.id !== id;\n      });\n\n      _this.setNotes(newNotes);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:9090/folders').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          'folders': result\n        });\n      });\n      fetch('http://localhost:9090/notes').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          'notes': result\n        });\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListMain,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: AddNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        addFolder: this.handleAddedFolder,\n        addNote: this.handleNewNote,\n        deleteNote: this.deleteNote\n      };\n      return React.createElement(Context.Provider, {\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.renderMainRoutes())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","Context","App","state","notes","folders","handleAddedFolder","item","folder","push","setState","handleNewNote","note","newNote","setNotes","deleteNote","id","newNotes","filter","n","fetch","then","res","json","result","map","path","value","addFolder","addNote","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport Context from '../Context';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        \n        fetch('http://localhost:9090/folders')\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'folders': result\n                })\n            })\n\n        fetch('http://localhost:9090/notes')\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    'notes': result\n                })\n            })\n    }\n\n    handleAddedFolder = (item) => {\n        let folder = this.state.folders;\n        folder.push(item)\n        this.setState({\n            folders: folder\n        })\n    }\n\n    handleNewNote = (note) => {\n        let newNote = this.state.notes;\n        newNote.push(note)\n        this.setState({\n            notes: newNote\n        })\n    }\n\n    setNotes = notes => {\n        this.setState({ notes: notes });\n    };\n\n    deleteNote = (id) => {\n        const newNotes = this.state.notes.filter(n => n.id !== id);\n        this.setNotes(newNotes)\n    }\n\n    \n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path=\"/add-folder\" component={AddFolder}/>\n                <Route path=\"/add-note\" component={AddNote}/>\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            addFolder: this.handleAddedFolder,\n            addNote: this.handleNewNote,\n            deleteNote: this.deleteNote\n        };\n        return (\n            <Context.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </Context.Provider>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}