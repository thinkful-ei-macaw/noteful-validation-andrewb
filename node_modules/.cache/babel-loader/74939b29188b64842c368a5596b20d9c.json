{"ast":null,"code":"import _classCallCheck from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewburchett/thinkful/noteful-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport config from '../config';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.handleAddedFolder = function (folder) {\n      _this.setState({\n        folders: folder\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(config.API_ENPOINT, \"/folders\")).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        return _this2.setState({\n          folders: result\n        });\n      });\n      fetch(\"\".concat(config.API_ENPOINT, \"/notes\")).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        return _this2.setState({\n          notes: result\n        });\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            return React.createElement(NoteListNav, Object.assign({\n              folders: folders,\n              notes: notes\n            }, routeProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId) || {};\n          var folder = findFolder(folders, note.folderId);\n          return React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: AddNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folderId = routeProps.match.params.folderId;\n            var notesForFolder = getNotesForFolder(notes, folderId);\n            return React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId);\n          return React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.renderMainRoutes()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","config","getNotesForFolder","findNote","findFolder","App","state","notes","folders","handleAddedFolder","folder","setState","fetch","API_ENPOINT","then","res","json","result","map","path","routeProps","noteId","match","params","note","folderId","notesForFolder","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport config from '../config';\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    handleAddedFolder = (folder) => {\n        this.setState({\n            folders: folder\n        })\n    }\n\n    componentDidMount() {\n        \n        fetch(`${config.API_ENPOINT}/folders`)\n            .then(res => res.json())\n            .then(result => this.setState({\n                folders: result\n            }))\n\n            fetch(`${config.API_ENPOINT}/notes`)\n            .then(res => res.json())\n            .then(result => this.setState({\n                notes: result\n            }))\n    }\n\n    renderNavRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => (\n                            <NoteListNav\n                                folders={folders}\n                                notes={notes}\n                                {...routeProps}\n                            />\n                        )}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId) || {};\n                        const folder = findFolder(folders, note.folderId);\n                        return <NotePageNav {...routeProps} folder={folder} />;\n                    }}\n                />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={AddFolder} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={AddNote} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => {\n                            const {folderId} = routeProps.match.params;\n                            const notesForFolder = getNotesForFolder(\n                                notes,\n                                folderId\n                            );\n                            return (\n                                <NoteListMain\n                                    {...routeProps}\n                                    notes={notesForFolder}\n                                />\n                            );\n                        }}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId);\n                        return <NotePageMain {...routeProps} note={note} />;\n                    }}\n                />\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                <header className=\"App__header\">\n                    <h1>\n                        <Link to=\"/\">Noteful</Link>{' '}\n                        <FontAwesomeIcon icon=\"check-double\" />\n                    </h1>\n                </header>\n                <main className=\"App__main\">{this.renderMainRoutes()}</main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}