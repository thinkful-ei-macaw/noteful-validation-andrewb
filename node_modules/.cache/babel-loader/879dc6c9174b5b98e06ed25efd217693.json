{"ast":null,"code":"var _jsxFileName = \"/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      folders: []\n    };\n  }\n\n  componentDidMount() {\n    // fake date loading from API call\n    setTimeout(() => this.setState(dummyStore), 600);\n  }\n\n  renderNavRoutes() {\n    const _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      render: routeProps => React.createElement(NoteListNav, Object.assign({\n        folders: folders,\n        notes: notes\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      render: routeProps => {\n        const noteId = routeProps.match.params.noteId;\n        const note = findNote(notes, noteId) || {};\n        const folder = findFolder(folders, note.folderId);\n        return React.createElement(NotePageNav, Object.assign({}, routeProps, {\n          folder: folder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  renderMainRoutes() {\n    const _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      render: routeProps => {\n        const folderId = routeProps.match.params.folderId;\n        const notesForFolder = getNotesForFolder(notes, folderId);\n        return React.createElement(NoteListMain, Object.assign({}, routeProps, {\n          notes: notesForFolder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      render: routeProps => {\n        const noteId = routeProps.match.params.noteId;\n        const note = findNote(notes, noteId);\n        return React.createElement(NotePageMain, Object.assign({}, routeProps, {\n          note: note,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"App__nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.renderNavRoutes()), React.createElement(\"header\", {\n      className: \"App__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n      icon: \"check-double\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(\"main\", {\n      className: \"App__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.renderMainRoutes()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/noteful-validation/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","dummyStore","getNotesForFolder","findNote","findFolder","App","state","notes","folders","componentDidMount","setTimeout","setState","renderNavRoutes","map","path","routeProps","noteId","match","params","note","folder","folderId","renderMainRoutes","notesForFolder","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport dummyStore from '../dummy-store';\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        // fake date loading from API call\n        setTimeout(() => this.setState(dummyStore), 600);\n    }\n\n    renderNavRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => (\n                            <NoteListNav\n                                folders={folders}\n                                notes={notes}\n                                {...routeProps}\n                            />\n                        )}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId) || {};\n                        const folder = findFolder(folders, note.folderId);\n                        return <NotePageNav {...routeProps} folder={folder} />;\n                    }}\n                />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        const {notes, folders} = this.state;\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        render={routeProps => {\n                            const {folderId} = routeProps.match.params;\n                            const notesForFolder = getNotesForFolder(\n                                notes,\n                                folderId\n                            );\n                            return (\n                                <NoteListMain\n                                    {...routeProps}\n                                    notes={notesForFolder}\n                                />\n                            );\n                        }}\n                    />\n                ))}\n                <Route\n                    path=\"/note/:noteId\"\n                    render={routeProps => {\n                        const {noteId} = routeProps.match.params;\n                        const note = findNote(notes, noteId);\n                        return <NotePageMain {...routeProps} note={note} />;\n                    }}\n                />\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                <header className=\"App__header\">\n                    <h1>\n                        <Link to=\"/\">Noteful</Link>{' '}\n                        <FontAwesomeIcon icon=\"check-double\" />\n                    </h1>\n                </header>\n                <main className=\"App__main\">{this.renderMainRoutes()}</main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}